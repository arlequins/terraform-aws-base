name: push

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  AWS_PROFILE_NAME: default
  AWS_REGION: ap-northeast-1
  WORK_DIR: ./terraform

jobs:

  execute:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ${{ env.WORK_DIR }}
    steps:

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2

      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set named credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile ${{ env.AWS_PROFILE_NAME }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE_NAME }}
          aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE_NAME }}

      - name: npm install
        run: npm install
        working-directory: ${{ env.WORK_DIR }}/scripts

      - name: npm download
        run: npm run download:ci
        working-directory: ${{ env.WORK_DIR }}/scripts

      - name: fmt
        run: terraform fmt -check

      - name: init
        run: terraform init

      - name: validate
        run: terraform validate

      - name: plan
        env:
          TF_VAR_deploy_user: ${{ vars.DEPLOY_USER }}
        run: terraform plan -out="out.plan"

      - name: npm upload
        if: always()
        run: npm run upload:ci
        working-directory: ${{ env.WORK_DIR }}/scripts
